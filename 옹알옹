#크레인 인형뽑기 게임(프로그래머스)
# def solution(board,moves):
#     b = []
#     cnt = 0
#     for i in range(len(moves)): # i = 0 ~ 7
#         for j in board:
#             if j[moves[i]-1] == 0:
#                 pass
#             else:
#                 b.append(j[moves[i]-1])
#                 j[moves[i]-1] = 0
#                 break
#         if len(b) >= 2 and b[-1] == b[-2]:
#             cnt += 2
#             del b[-1]
#             del b[-1]
#
#
#     return cnt
# board = [[0,0,0,0,0],
#          [0,0,1,0,3],
#          [0,2,5,0,1],
#          [4,2,4,4,2],
#          [3,5,1,3,1]]
# moves = [1,5,3,5,1,2,1,4]
# print(solution(board,moves))




#개인정보 수집 유효기간(프로그래머스)
# def solution(today, terms, privacies):
#     ty,tm,td = map(int,today.split('.'))
#     today =  ty * 12 * 28 + tm * 28 +td
#     answer = []
#     for n,privacy in enumerate(privacies,start=1):
#         date, alpha = privacy.split()
#         dy,dm,dd = map(int,date.split('.'))
#         d_day = dy * 12 * 28 + dm * 28 + dd
#         for term in terms:
#             A,N = term.split()
#             if alpha == A:
#                 d_day += int(N) * 28 - 1
#                 break
#         if today > d_day:
#             answer.append(n)
#     return answer
# today = "2022.05.19"
# terms = ["A 6", "B 12", "C 3"]
# privacies = ["2021.05.02 A", "2021.07.01 B", "2022.02.19 C", "2022.02.20 C"]
# print(solution(today, terms, privacies))




#옹알이2(프로그래머스)
def solution(babbling):
    answer = 0
    can = ["aya", "ye","woo", "ma"]
    for bab in babbling:
        d = bab
        for c in can:
            i = d.find(c) + len(c)
            if d[i: i + len(c)] == c:
                break
            if d[0] == d[-1]:
                d = d.replace(c, '1', 1)
        if d.isdigit():
            answer += 1

    return answer
babbling = ["aya", "yee", "u", "maa", "wyeoo"]
print(solution(babbling))
